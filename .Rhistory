MakeIntroduction <- function(name, age) {
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old"))
}
# Create a variable `my.intro` by passing your variables `my.name` and `my.age` into your `MakeIntroduction` function
my.intro <- MakeIntroduction(my.name, my.age)
# Create a variable `casual.intro` by substituting "Hello, my name is ", with "Hey, I'm" in your `my.intro` variable
casual.intro <- gsub("Hello, my name is", "Hey, I'm", my.intro)
# Create a new variable `loud.intro`, which is your `my.intro` variable in all upper-case letters
loud.intro <- toupper(my.intro)
# Create a new variable `quiet.intro`, which is your `my.intro` variable in all lower-case letters
quiet.intro <- tolower(my.intro)
# Create a new variable capitalized, which is your `my.intro` variable with each word capitalized
# hint: use the stringr function `str_to_title`
capitalized <- str_to_title(my.intro)
# Using the `str_count` function, create a variable `occurrences` that stores the # of times the letter "e" appears in `my.intro`
occurences <- str_count(my.intro, pattern="e")
# Write another function `Double` that takes in a variable and returns that variable times two
Double <- function(input) {
return (input * 2)
}
# Using your `Double` function, create a variable `minutes.in.two.days`, which is the number of minutes in two days
minutes.in.two.days <- Double(minutes.in.a.day)
# Write another function `ThirdPower` that takes in a value and returns that value cubed
ThirdPower <- function(value) {
return(value^3)
}
# Create a variable `twenty.seven`` by passing the number 3 to your `ThirdPower` function
twenty.seven <- ThirdPower(3)
# Vectors ----------------------------------------------------------------------
# Create a vector `movies` that contains the names of six movies you like
movies <- c("Dear John", "Guardians of the Galaxy", "Tangled", "The Notebook", "Rush Hour", "Step Up")
# Create a vector `top.three` that only contains the first three movies in the vector
top.three <- movies[1:3]
# Using your vector and the paste method, create a vector `excited` that adds the phrase -
# " is a great movie!" to the end of each element in your movies vector
excited <- paste(movies, 'is a great movie!')
# Create a vector `without.four` that has your first three movies, and your 5th and 6th movies.
without.four <- movies[-4]
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
# Using the built in length function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
# Using the `mean` function, create a variable `numbers.mean` that is the mean of your vector `numbers`
numbers.mean <- mean(numbers)
# Using the `median` function, create a variable `numbers.median` that is the median of your vector `numbers`
numbers.median <- median(numbers)
# Create a vector `lower.numbers` that is the numbers 500:699
lower.numbers <- c(500:699)
# Create a vector `all.numbers` that combines your `lower.numbers` and `numbers` vectors
all.numbers <- c(lower.numbers, numbers)
# Dates ----------------------------------------------------------------------------
# Use the `as.Date()` function to create a variable `today` that represents today's date
# You can pass in a character string of the day you wrote this, or you can get the current date
# Hint: https://www.rdocumentation.org/packages/base/versions/3.3.2/topics/Sys.time
today <- as.Date(Sys.Date())
# Create a variable `winter.break` that represents the first day of Winter break (December 15, 2017).
# Make sure to use the `as.Date` function again
winter.break <- as.Date('December 15, 2017',format='%B %d, %Y')
# Create a variable `days.to.break` that is how many days until break (hint: subtract the dates!)
days.to.break <- winter.break - today
# Define a function called `MakeBirthdayIntro` that takes in three arguments:
# a name, an age, and a character string for your next (upcoming) birthday.
# This method should return a character string of the format:
#  "Hello, my name is {name} and I'm {age} years old. In {N} days I'll be {new.age}"
# You should utilize your `MakeIntroduction()` function from Part 1, and compute {N} and {new.age} in your function
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(), 'In', 'days I\'ll be', new.age))
}
# Create a variable `my.bday.intro` using the `MakeBirthdayIntro` function, passing in `my.name`, `my.age`, and your upcoming birthday.
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
MakeIntroduction <- function(name, age) {
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old"))
}
my.intro <- MakeIntroduction(my.name, my.age)
casual.intro <- gsub("Hello, my name is", "Hey, I'm", my.intro)
loud.intro <- toupper(my.intro)
loud.intro <- toupper(my.intro)
# Create a new variable `quiet.intro`, which is your `my.intro` variable in all lower-case letters
quiet.intro <- tolower(my.intro)
# Create a new variable capitalized, which is your `my.intro` variable with each word capitalized
# hint: use the stringr function `str_to_title`
capitalized <- str_to_title(my.intro)
# Using the `str_count` function, create a variable `occurrences` that stores the # of times the letter "e" appears in `my.intro`
occurences <- str_count(my.intro, pattern="e")
# Write another function `Double` that takes in a variable and returns that variable times two
Double <- function(input) {
return (input * 2)
}
# Using your `Double` function, create a variable `minutes.in.two.days`, which is the number of minutes in two days
minutes.in.two.days <- Double(minutes.in.a.day)
# Write another function `ThirdPower` that takes in a value and returns that value cubed
ThirdPower <- function(value) {
return(value^3)
}
# Create a variable `twenty.seven`` by passing the number 3 to your `ThirdPower` function
twenty.seven <- ThirdPower(3)
# Vectors ----------------------------------------------------------------------
# Create a vector `movies` that contains the names of six movies you like
movies <- c("Dear John", "Guardians of the Galaxy", "Tangled", "The Notebook", "Rush Hour", "Step Up")
# Create a vector `top.three` that only contains the first three movies in the vector
top.three <- movies[1:3]
# Using your vector and the paste method, create a vector `excited` that adds the phrase -
# " is a great movie!" to the end of each element in your movies vector
excited <- paste(movies, 'is a great movie!')
# Create a vector `without.four` that has your first three movies, and your 5th and 6th movies.
without.four <- movies[-4]
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
# Using the built in length function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
# Using the `mean` function, create a variable `numbers.mean` that is the mean of your vector `numbers`
numbers.mean <- mean(numbers)
# Using the `median` function, create a variable `numbers.median` that is the median of your vector `numbers`
numbers.median <- median(numbers)
# Create a vector `lower.numbers` that is the numbers 500:699
lower.numbers <- c(500:699)
# Create a vector `all.numbers` that combines your `lower.numbers` and `numbers` vectors
all.numbers <- c(lower.numbers, numbers)
# Dates ----------------------------------------------------------------------------
# Use the `as.Date()` function to create a variable `today` that represents today's date
# You can pass in a character string of the day you wrote this, or you can get the current date
# Hint: https://www.rdocumentation.org/packages/base/versions/3.3.2/topics/Sys.time
today <- as.Date(Sys.Date())
# Create a variable `winter.break` that represents the first day of Winter break (December 15, 2017).
# Make sure to use the `as.Date` function again
winter.break <- as.Date('December 15, 2017',format='%B %d, %Y')
# Create a variable `days.to.break` that is how many days until break (hint: subtract the dates!)
days.to.break <- winter.break - today
# Define a function called `MakeBirthdayIntro` that takes in three arguments:
# a name, an age, and a character string for your next (upcoming) birthday.
# This method should return a character string of the format:
#  "Hello, my name is {name} and I'm {age} years old. In {N} days I'll be {new.age}"
# You should utilize your `MakeIntroduction()` function from Part 1, and compute {N} and {new.age} in your function
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(), 'In', 'days I\'ll be', new.age))
}
# Create a variable `my.bday.intro` using the `MakeBirthdayIntro` function, passing in `my.name`, `my.age`, and your upcoming birthday.
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
# Challenge ------------------------------------------------------------------
# Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a *vector of strings*.
# Demonstrate that your approach is successful by passing a vector of courses to your function
# For example, RemoveDigits(c("INFO 201", "CSE 142"))
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.name <- 'Cecilia'
my.intro <- MakeIntroduction(my.name, my.age)
MakeIntroduction <- function(name, age) {
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old"))
}
loud.intro <- toupper(my.intro)
quiet.intro <- tolower(my.intro)
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(), 'In', 'days I\'ll be', new.age))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(name, age), 'In', 'days I\'ll be', new.age))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeIntroduction <- function(name, age) {
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old."))
}
my.intro <- MakeIntroduction(my.name, my.age)
my.intro
my.bday.intro
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(name, age), 'In', 'days I\'ll be', new.age))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(name, age), 'In', 'days I\'ll be', new.age, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday)
return(paste(MakeIntroduction(name, age), 'In', days, 'days I\'ll be', new.age, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday) - today
return(paste(MakeIntroduction(name, age), 'In', days, 'days I\'ll be', new.age, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
RemoveDigits <- function(vector) {
index <- 1
for(var in length(vector)) {
vector[index] <- gsub([0-9]+, '', vector[index])
index++
}
return(vector)
}
RemoveDigits <- function(vector) {
index <- 1
for(var in length(vector)) {
vector[index] <- gsub('[0-9]+', '', vector[index])
index++
}
return(vector)
}
RemoveDigits <- function(vector) {
index <- 1
for(var in length(vector)) {
vector[index] <- gsub('[0-9]+', '', vector[index])
index++
}
return(vector)
}
RemoveDigits <- function(vector) {
index <- 1
for(var in length(vector)) {
vector[index] <- gsub('[0-9]+', '', vector[index])
index <- index + 1
}
return(vector)
}
remove <- RemoveDigits(c("INFO 201", "CSE 142"))
remove
remove <- RemoveDigits(c("INFO 201", "CSE 142", "ENGL 101"))
remove
RemoveDigits <- function(vector) {
for(i in length(vector)) {
vector[i] <- gsub('[0-9]+', '', vector[i])
}
return(vector)
}
remove <- RemoveDigits(c("INFO 201", "CSE 142", "ENGL 101"))
remove
RemoveDigits <- function(vector) {
for(i in 1:length(vector)) {
vector[i] <- gsub('[0-9]+', '', vector[i])
}
return(vector)
}
remove <- RemoveDigits(c("INFO 201", "CSE 142", "ENGL 101"))
remove
RemoveDigits <- function(vector) {
for(i in 1:length(vector)) {
vector[i] <- gsub('[0-9 ]+', '', vector[i])
}
return(vector)
}
RemoveDigits <- function(vector) {
for(i in 1:length(vector)) {
vector[i] <- gsub('[0-9]+', '', vector[i])
}
return(vector)
}
remove <- RemoveDigits(c("INFO 201", "CSE 142", "ENGL 101"))
RemoveDigits <- function(vector) {
vector <- gsub('[0-9]+', '', vector)
return(vector)
}
remove <- RemoveDigits(c("INFO 201", "CSE 142", "ENGL 101"))
remove
RemoveDigits <- function(vector) {
return(gsub('[0-9]+', '', vector))
}
remove <- RemoveDigits(c("INFO 201", "CSE 142", "ENGL 101"))
remove
remove <- RemoveDigits(c("ASTRO 101", "INFO 201", "ART 123", "PIZZA 666"))
remove
my.age
my.name
minutes.in.a.day
hours.in.a.year
hours.in.a.year <- 24 * 365
more.minutes.than.hours <- minutes.in.a.day > hours.in.a.year
more.minutes.than.hours
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old"))
MakeIntroduction <- function(name, age) {
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old"))
}
my.intro
my.intro <- MakeIntroduction(my.name, my.age)
my.intro
casual.intro <- gsub("Hello, my name is", "Hey, I'm", my.intro)
loud.intro <- toupper(my.intro)
# a2-foundational-skills
# Set up and Defining variables -----------------------------------------------------------------
# Install and load the the `stringr` package, which has a variety of built in functions that make working with string variables easier.
install.packages('stringr')
library("stringr")
# Create a numeric variable `my.age` that is equal to your age
my.age <- 21
# Create a variable `my.name` that is equal to your first name
my.name <- 'Cecilia'
# Using multiplication, create a variable `minutes.in.a.day` that is equal to the number of minutes in a day
minutes.in.a.day <- 24 * 60
# Using multiplication, create a variable `hours.in.a.year` that is the number of hours in a year
hours.in.a.year <- 24 * 365
# Create a variable `more.minutes.than.hours` that is a boolean value (TRUE/FALSE)
# It should be TRUE if there are more minutes in a day than hours in a year, otherwise FALSE
more.minutes.than.hours <- minutes.in.a.day > hours.in.a.year
# Working with functions ----------------------------------------------------------
# Write a function called `MakeIntroduction` that takes in two arguments: name, and age.
# This function should return a string value that says "Hello, my name is {name}, and I'm {age} years old".
MakeIntroduction <- function(name, age) {
return (paste0("Hello, my name is ", name, ", and I'm ", age, " years old"))
}
# Create a variable `my.intro` by passing your variables `my.name` and `my.age` into your `MakeIntroduction` function
my.intro <- MakeIntroduction(my.name, my.age)
# Create a variable `casual.intro` by substituting "Hello, my name is ", with "Hey, I'm" in your `my.intro` variable
casual.intro <- gsub("Hello, my name is", "Hey, I'm", my.intro)
# Create a new variable `loud.intro`, which is your `my.intro` variable in all upper-case letters
loud.intro <- toupper(my.intro)
# Create a new variable `quiet.intro`, which is your `my.intro` variable in all lower-case letters
quiet.intro <- tolower(my.intro)
# Create a new variable capitalized, which is your `my.intro` variable with each word capitalized
# hint: use the stringr function `str_to_title`
capitalized <- str_to_title(my.intro)
# Using the `str_count` function, create a variable `occurrences` that stores the # of times the letter "e" appears in `my.intro`
occurences <- str_count(my.intro, pattern="e")
# Write another function `Double` that takes in a variable and returns that variable times two
Double <- function(input) {
return (input * 2)
}
# Using your `Double` function, create a variable `minutes.in.two.days`, which is the number of minutes in two days
minutes.in.two.days <- Double(minutes.in.a.day)
# Write another function `ThirdPower` that takes in a value and returns that value cubed
ThirdPower <- function(value) {
return(value^3)
}
# Create a variable `twenty.seven`` by passing the number 3 to your `ThirdPower` function
twenty.seven <- ThirdPower(3)
# Vectors ----------------------------------------------------------------------
# Create a vector `movies` that contains the names of six movies you like
movies <- c("Dear John", "Guardians of the Galaxy", "Tangled", "The Notebook", "Rush Hour", "Step Up")
# Create a vector `top.three` that only contains the first three movies in the vector
top.three <- movies[1:3]
# Using your vector and the paste method, create a vector `excited` that adds the phrase -
# " is a great movie!" to the end of each element in your movies vector
excited <- paste(movies, 'is a great movie!')
# Create a vector `without.four` that has your first three movies, and your 5th and 6th movies.
without.four <- movies[-4]
# Create a vector `numbers` that is the numbers 700 through 999
numbers <- c(700:999)
# Using the built in length function, create a variable `len` that is equal to the length of your vector `numbers`
len <- length(numbers)
# Using the `mean` function, create a variable `numbers.mean` that is the mean of your vector `numbers`
numbers.mean <- mean(numbers)
# Using the `median` function, create a variable `numbers.median` that is the median of your vector `numbers`
numbers.median <- median(numbers)
# Create a vector `lower.numbers` that is the numbers 500:699
lower.numbers <- c(500:699)
# Create a vector `all.numbers` that combines your `lower.numbers` and `numbers` vectors
all.numbers <- c(lower.numbers, numbers)
# Dates ----------------------------------------------------------------------------
# Use the `as.Date()` function to create a variable `today` that represents today's date
# You can pass in a character string of the day you wrote this, or you can get the current date
# Hint: https://www.rdocumentation.org/packages/base/versions/3.3.2/topics/Sys.time
today <- as.Date(Sys.Date())
# Create a variable `winter.break` that represents the first day of Winter break (December 15, 2017).
# Make sure to use the `as.Date` function again
winter.break <- as.Date('December 15, 2017',format='%B %d, %Y')
# Create a variable `days.to.break` that is how many days until break (hint: subtract the dates!)
days.to.break <- winter.break - today
# Define a function called `MakeBirthdayIntro` that takes in three arguments:
# a name, an age, and a character string for your next (upcoming) birthday.
# This method should return a character string of the format:
#  "Hello, my name is {name} and I'm {age} years old. In {N} days I'll be {new.age}"
# You should utilize your `MakeIntroduction()` function from Part 1, and compute {N} and {new.age} in your function
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday) - today
return(paste(MakeIntroduction(name, age), 'In', days, 'days I\'ll be', new.age, '.'))
}
# Create a variable `my.bday.intro` using the `MakeBirthdayIntro` function, passing in `my.name`, `my.age`, and your upcoming birthday.
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
# Challenge ------------------------------------------------------------------
# Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a *vector of strings*.
RemoveDigits <- function(vector) {
return(gsub('[0-9]+', '', vector))
}
# Demonstrate that your approach is successful by passing a vector of courses to your function
# For example, RemoveDigits(c("INFO 201", "CSE 142"))
remove <- RemoveDigits(c("ASTRO 101", "INFO 201", "ART 123", "PIZZA 666"))
my.intro
casual.intro
loud.intro
quiet.intro
capitalized
occurences
minutes.in.a.day
minutes.in.two.days
ThirdPower
ThirdPower(3)
ThirdPower(4)
twenty.seven
movies
top.three
without.four
numbers
len
numbers.mean
numbers.median
lower.numbers
all.numbers
today
winter.break
days.to.break
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday) - today
return(paste(MakeIntroduction(name, age), '. In', as.Date(upcoming.bday) - today, 'days I\'ll be', age + 1, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
return(paste0(MakeIntroduction(name, age), '. In', as.Date(upcoming.bday) - today, ' days I\'ll be ', age + 1, '.'))
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday) - today
return(paste0(MakeIntroduction(name, age), '. In', as.Date(upcoming.bday) - today, ' days I\'ll be ', age + 1, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeBirthdayIntro <- function(name, age, upcoming.bday) {
new.age <- age + 1
days <- as.Date(upcoming.bday) - today
return(paste0(MakeIntroduction(name, age), '. In ', as.Date(upcoming.bday) - today, ' days I\'ll be ', age + 1, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeBirthdayIntro <- function(name, age, bday) {
days <- as.Date(bday) - today
return(paste0(MakeIntroduction(name, age), '. In ', days, ' days I\'ll be ', age + 1, '.'))
}
MakeBirthdayIntro <- function(name, age, bday) {
return(paste0(MakeIntroduction(name, age), '. In ', as.Date(bday) - today, ' days I\'ll be ', age + 1, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
MakeBirthdayIntro <- function(name, age, bday) {
days <- as.Date(bday) - today
intro <- MakeIntroduction(name, age)
return(paste0(intro, '. In ', days, ' days I\'ll be ', age + 1, '.'))
}
my.bday.intro <- MakeBirthdayIntro('Cecilia', 21, '2018-09-25')
my.bday.intro
RemoveDigits <- function(vector) {
return(gsub('[0-9]+', '', vector))
}
remove <- RemoveDigits(c("ASTRO 101", "INFO 201", "ART 123", "PIZZA 666"))
remove
install.packages("httr")
install.packges("jsonlite")
install.packages("jsonlite")
shiny::runApp('Documents/FALL17/201/Exercises/final-project')
runApp('Documents/FALL17/201/Exercises/final-project')
runApp('Documents/FALL17/201/info201-ab5')
runApp('Documents/FALL17/201/info201-ab5')
library("httr")
library("jsonlite")
library("dplyr")
setwd("~/Documents/FALL17/201/info201-ab5/")
source('api-keys.R')
library("httr")
library("jsonlite")
library("dplyr")
setwd("~/Documents/FALL17/201/info201-ab5/")
source('api-keys.R')
setwd("~/Documents/FALL17/201/info201-ab5/")
library("httr")
library("jsonlite")
library("dplyr")
setwd("~/Documents/FALL17/201/info201-ab5/")
source('api_key.R')
base.uri <- 'http://api.data.gov/ed/collegescorecard/v1/schools/'
base.uri <- 'http://api.data.gov/ed/collegescorecard/v1/schools/'
query.params <- list(api_key = api.key, fields = school.name, school.state = "WA")
response <- GET(base.uri, query = query.params)
content <- content(response, "text")
body.data <- fromJSON(content) #extract and parse
base.uri <- 'http://api.data.gov/ed/collegescorecard/v1/schools/'
query.params <- list(api_key = api.key, fields = school.name, school.state = "WA")
query.params <- list(api_key = api.key, fields = "school.name", school.state = "WA")
response <- GET(base.uri, query = query.params)
content <- content(response, "text")
body.data <- fromJSON(content) #extract and parse
body.data
base.uri <- 'http://api.data.gov/ed/collegescorecard/v1/schools/'
query.params <- list(api_key = api.key, fields = "school.name", school.state = "WA")
response <- GET(base.uri, query = query.params)
content <- content(response, "text")
body.data
response
base.uri <- 'https://api.data.gov/ed/collegescorecard/v1/schools/'
query.params <- list(api_key = api.key, fields = "school.name", school.state = "WA")
response <- GET(base.uri, query = query.params)
content <- content(response, "text")
body.data <- fromJSON(content) #extract and parse
body.data
View(body.data)
response
